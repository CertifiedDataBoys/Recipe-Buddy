# Specify the docker-compose format version we will be using
version: "3"

# Define the services that this application will need to run
services:
  # Define the Recipe Buddy service
  recipe_buddy:
    # Build using our Dockerfile from app/Dockerfile
    build:
      context: ./app
      dockerfile: Dockerfile
    # Name the container
    container_name: Recipe-Buddy
    # Restart unless the user specifies to stop the container
    # restart: unless-stopped
    # Forward port 5000 in the container to port 5000 on the host machine
    ports:
      - 5000:5000
    # Set our environment variables
    environment:
      # Set our timezone
      TZ: America/New_York
      # Set the hostname of the MariaDB instance
      MARIADB_HOST: db
      # Set the port number of the MariaDB instance
      MARIADB_PORT: 3306
      # Set the database name of the MariaDB instance
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      # Set the username of the MariaDB instance
      MARIADB_USER: ${MARIADB_USER}
      # Set the password of the MariaDB instance
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      # Set Flask to use production mode
      FLASK_ENV: production
      # Set Flask app path
      FLASK_APP: .
      # Set the secret key
      SECRET_KEY: ${SECRET_KEY}
      # Password salt
      PASSWORD_SALT: ${PASSWORD_SALT}
      # Wait for DB variables
      WAIT_HOSTS: db:3306
      WAIT_HOSTS_TIMEOUT: 300
      WAIT_SLEEP_INTERVAL: 30
      WAIT_HOST_CONNECT_TIMEOUT: 30
    # Define volumes (directories) that our container will use
    volumes:
      # Mount the project host directory to "/usr/src" in the container
      - ./app:/app
    # Use the network created at the bottom of the file to connect our Recipe Buddy container to the MariaDB container
    networks:
      - recipe-buddy-backend-network
    # This container depends on the MariaDB container, do not start if MariaDB is not online and stop the process if MariaDB goes offline
    depends_on:
      db:
        condition: service_healthy
  # Define our MariaDB service
  db:
    # Name our container
    container_name: Recipe-Buddy-DB
    # Use the official MariaDB image from Docker Hub
    image: mariadb:10.6.4
    # Restart unless the user specifies to stop the container
    restart: unless-stopped
    # Forward port 3306 in our container to port 5001 on the host machine
    ports:
      - 5001:3306
    # Set our environment variables
    environment:
      # Set our timezone
      TZ: America/New_York
      # Use a random MariaDB root password, we won't be needing it, but it shouldn't be left as default
      MARIADB_RANDOM_ROOT_PASSWORD: 1
      # Set the database name of the MariaDB instance
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      # Set the username of the MariaDB instance
      MARIADB_USER: ${MARIADB_USER}
      # Set the password of the MariaDB instance
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
    # Define volumes (directories) that our container will use
    volumes:
      # Mount the host directory "data/mariadb" to "/var/lib/mysql" in the container
      - ./data/mariadb:/var/lib/mysql
    # Use the network created at the bottom of the file to connect our Recipe Buddy container to the MariaDB container
    networks:
      - recipe-buddy-backend-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "${MARIADB_USER}",
          "-p${MARIADB_PASSWORD}",
        ]
      timeout: 5s
      retries: 10

# Create a custom bridged network to allow the two containers to communicate using a secured private virtual network
networks:
  recipe-buddy-backend-network:
    driver: bridge
